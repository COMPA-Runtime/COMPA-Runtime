<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <graph edgedefault="directed">
        <data key="name">costParallelWork</data>
        <node id="nIter" kind="cfg_in_iface"/>
        <node id="height" kind="cfg_in_iface"/>
        <node id="width" kind="cfg_in_iface"/>
        <node id="maxDisp" kind="cfg_in_iface"/>
        <node id="minDisp" kind="cfg_in_iface"/>
        <node id="truncValue" kind="cfg_in_iface"/>
        <node id="scale" kind="cfg_in_iface"/>
        <node expr="height*width" id="size" kind="param"/>
        <node expr="maxDisp-minDisp+1" id="nDisp" kind="param"/>
        <node id="cenL" kind="src">
            <port annotation="NONE" expr="size" kind="output" name="cenL"/>
        </node>
        <node id="cenR" kind="src">
            <port annotation="NONE" expr="size" kind="output" name="cenR"/>
        </node>
        <node id="grayL" kind="src">
            <port annotation="NONE" expr="size" kind="output" name="grayL"/>
        </node>
        <node id="grayR" kind="src">
            <port annotation="NONE" expr="size" kind="output" name="grayR"/>
        </node>
        <node id="rgb" kind="src">
            <port annotation="NONE" expr="size" kind="output" name="rgb"/>
        </node>
        <node id="Br_rgb" kind="broadcast">
            <port kind="cfg_input" name="size"/>
            <port annotation="NONE" expr="size" kind="input" name="in"/>
            <port annotation="NONE" expr="size" kind="output" name="out0"/>
            <port annotation="NONE" expr="size" kind="output" name="out1"/>
        </node>
        <node id="GenIx" kind="actor">
            <data key="graph_desc">Code/include/actors.h</data>
            <loop name="GenIx">
                <param direction="IN" isConfig="true" name="nIter" type="Param"/>
                <param direction="OUT" isConfig="false" name="ixs" type="uint8_t"/>
            </loop>
            <port kind="cfg_input" name="nIter"/>
            <port annotation="NONE" expr="nIter" kind="output" name="ixs"/>
        </node>
        <node id="GenDisp" kind="actor">
            <data key="graph_desc">Code/include/actors.h</data>
            <loop name="DisparityGen">
                <param direction="IN" isConfig="true" name="maxDisp" type="Param"/>
                <param direction="IN" isConfig="true" name="minDisp" type="Param"/>
                <param direction="OUT" isConfig="false" name="dispIxs" type="uint8_t"/>
            </loop>
            <port kind="cfg_input" name="minDisp"/>
            <port kind="cfg_input" name="maxDisp"/>
            <port annotation="NONE" expr="maxDisp-minDisp+1"
                kind="output" name="dispIxs"/>
        </node>
        <node id="VWeights" kind="actor">
            <data key="graph_desc">Code/include/actors.h</data>
            <loop name="VWeights">
                <param direction="IN" isConfig="true" name="height" type="Param"/>
                <param direction="IN" isConfig="true" name="width" type="Param"/>
                <param direction="IN" isConfig="false" name="offset" type="uint8_t"/>
                <param direction="IN" isConfig="false" name="rgbL" type="uint8_t"/>
                <param direction="OUT" isConfig="false" name="out" type="uint8_t"/>
            </loop>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port annotation="NONE" expr="1" kind="input" name="offset"/>
            <port annotation="NONE" expr="height*width" kind="input" name="rgbL"/>
            <port annotation="NONE" expr="height*width" kind="output" name="out"/>
        </node>
        <node id="HWeight" kind="actor">
            <data key="graph_desc">Code/include/actors.h</data>
            <loop name="HWeights">
                <param direction="IN" isConfig="true" name="height" type="Param"/>
                <param direction="IN" isConfig="true" name="width" type="Param"/>
                <param direction="IN" isConfig="false" name="offset" type="uint8_t"/>
                <param direction="IN" isConfig="false" name="rgbL" type="uint8_t"/>
                <param direction="OUT" isConfig="false" name="out" type="uint8_t"/>
            </loop>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port annotation="NONE" expr="1" kind="input" name="offset"/>
            <port annotation="NONE" expr="height*width" kind="input" name="rgbL"/>
            <port annotation="NONE" expr="height*width" kind="output" name="out"/>
        </node>
        <node id="CostConstruction" kind="actor">
            <data key="graph_desc">Code/include/actors.h</data>
            <loop name="CostConstruction">
                <param direction="IN" isConfig="true" name="height" type="Param"/>
                <param direction="IN" isConfig="true" name="width" type="Param"/>
                <param direction="IN" isConfig="true" name="truncValue" type="Param"/>
                <param direction="IN" isConfig="false" name="grayL" type="uint8_t"/>
                <param direction="IN" isConfig="false" name="grayR" type="uint8_t"/>
                <param direction="IN" isConfig="false" name="cenL" type="uint8_t"/>
                <param direction="IN" isConfig="false" name="cenR" type="uint8_t"/>
                <param direction="IN" isConfig="false" name="disp" type="uint8_t"/>
                <param direction="OUT" isConfig="false" name="error" type="uint8_t"/>
            </loop>
            <port kind="cfg_input" name="truncValue"/>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port annotation="NONE" expr="1" kind="input" name="disp"/>
            <port annotation="NONE" expr="height*width" kind="input" name="cenL"/>
            <port annotation="NONE" expr="height*width" kind="input" name="cenR"/>
            <port annotation="NONE" expr="height*width" kind="input" name="grayL"/>
            <port annotation="NONE" expr="height*width" kind="input" name="grayR"/>
            <port annotation="NONE" expr="height*width" kind="output" name="error"/>
        </node>
        <node id="DispComp" kind="actor">
            <data key="graph_desc">Algo/DisparityComp.pi</data>
            <port kind="cfg_input" name="scale"/>
            <port kind="cfg_input" name="nIter"/>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="maxDisp"/>
            <port kind="cfg_input" name="minDisp"/>
            <port annotation="NONE"
                expr="height*width*(maxDisp-minDisp+1)" kind="input" name="cost"/>
            <port annotation="NONE" expr="maxDisp-minDisp+1"
                kind="input" name="dispIx"/>
            <port annotation="NONE" expr="nIter" kind="input" name="offsets"/>
            <port annotation="NONE" expr="height*width*nIter"
                kind="input" name="hWeights"/>
            <port annotation="NONE" expr="height*width*nIter"
                kind="input" name="vWeights"/>
            <port annotation="NONE" expr="height*width" kind="output" name="rawDisparity"/>
        </node>
        <node id="rawDisparity" kind="snk">
            <port annotation="NONE" expr="size" kind="input" name="rawDisparity"/>
        </node>
        <node id="Br_Ix" kind="broadcast">
            <port kind="cfg_input" name="nIter"/>
            <port annotation="NONE" expr="nIter" kind="input" name="in"/>
            <port annotation="NONE" expr="nIter" kind="output" name="out0"/>
            <port annotation="NONE" expr="nIter" kind="output" name="out1"/>
            <port annotation="NONE" expr="nIter" kind="output" name="out2"/>
        </node>
        <node id="Br_Disp" kind="broadcast">
            <port kind="cfg_input" name="nDisp"/>
            <port annotation="NONE" expr="nDisp" kind="input" name="in"/>
            <port annotation="NONE" expr="nDisp" kind="output" name="out0"/>
            <port annotation="NONE" expr="nDisp" kind="output" name="out1"/>
        </node>
        <edge kind="fifo" source="DispComp" sourceport="rawDisparity"
            target="rawDisparity" targetport="rawDisparity" type="uint8_t"/>
        <edge kind="fifo" source="CostConstruction" sourceport="error"
            target="DispComp" targetport="cost" type="uint8_t"/>
        <edge kind="fifo" source="VWeights" sourceport="out"
            target="DispComp" targetport="vWeights" type="uint8_t"/>
        <edge kind="fifo" source="HWeight" sourceport="out"
            target="DispComp" targetport="hWeights" type="uint8_t"/>
        <edge kind="fifo" source="rgb" sourceport="rgb" target="Br_rgb"
            targetport="in" type="rgb"/>
        <edge kind="fifo" source="GenIx" sourceport="ixs" target="Br_Ix"
            targetport="in" type="uint8_t"/>
        <edge kind="fifo" source="GenDisp" sourceport="dispIxs"
            target="Br_Disp" targetport="in" type="uint8_t"/>
        <edge kind="fifo" source="Br_Disp" sourceport="out0"
            target="CostConstruction" targetport="disp" type="uint8_t"/>
        <edge kind="fifo" source="Br_Disp" sourceport="out1"
            target="DispComp" targetport="dispIx" type="uint8_t"/>
        <edge kind="fifo" source="Br_Ix" sourceport="out0"
            target="DispComp" targetport="offsets" type="uint8_t"/>
        <edge kind="fifo" source="Br_Ix" sourceport="out1"
            target="HWeight" targetport="offset" type="uint8_t"/>
        <edge kind="fifo" source="Br_Ix" sourceport="out2"
            target="VWeights" targetport="offset" type="uint8_t"/>
        <edge kind="fifo" source="Br_rgb" sourceport="out0"
            target="HWeight" targetport="rgbL" type="rgb"/>
        <edge kind="fifo" source="Br_rgb" sourceport="out1"
            target="VWeights" targetport="rgbL" type="rgb"/>
        <edge kind="fifo" source="cenL" sourceport="cenL"
            target="CostConstruction" targetport="cenL" type="uint8_t"/>
        <edge kind="fifo" source="cenR" sourceport="cenR"
            target="CostConstruction" targetport="cenR" type="uint8_t"/>
        <edge kind="fifo" source="grayL" sourceport="grayL"
            target="CostConstruction" targetport="grayL" type="uint8_t"/>
        <edge kind="fifo" source="grayR" sourceport="grayR"
            target="CostConstruction" targetport="grayR" type="uint8_t"/>
        <edge kind="dependency" source="nIter" target="GenIx" targetport="nIter"/>
        <edge kind="dependency" source="height"
            target="CostConstruction" targetport="height"/>
        <edge kind="dependency" source="width" target="CostConstruction" targetport="width"/>
        <edge kind="dependency" source="truncValue"
            target="CostConstruction" targetport="truncValue"/>
        <edge kind="dependency" source="maxDisp" target="DispComp" targetport="maxDisp"/>
        <edge kind="dependency" source="minDisp" target="DispComp" targetport="minDisp"/>
        <edge kind="dependency" source="scale" target="DispComp" targetport="scale"/>
        <edge kind="dependency" source="nIter" target="DispComp" targetport="nIter"/>
        <edge kind="dependency" source="width" target="DispComp" targetport="width"/>
        <edge kind="dependency" source="height" target="DispComp" targetport="height"/>
        <edge kind="dependency" source="maxDisp" target="GenDisp" targetport="maxDisp"/>
        <edge kind="dependency" source="minDisp" target="GenDisp" targetport="minDisp"/>
        <edge kind="dependency" source="height" target="HWeight" targetport="height"/>
        <edge kind="dependency" source="width" target="HWeight" targetport="width"/>
        <edge kind="dependency" source="height" target="VWeights" targetport="height"/>
        <edge kind="dependency" source="width" target="VWeights" targetport="width"/>
        <edge kind="dependency" source="width" target="size"/>
        <edge kind="dependency" source="height" target="size"/>
        <edge kind="dependency" source="size" target="cenL"/>
        <edge kind="dependency" source="size" target="cenR"/>
        <edge kind="dependency" source="size" target="grayL"/>
        <edge kind="dependency" source="size" target="grayR"/>
        <edge kind="dependency" source="size" target="rgb"/>
        <edge kind="dependency" source="size" target="rawDisparity"/>
        <edge kind="dependency" source="minDisp" target="nDisp"/>
        <edge kind="dependency" source="maxDisp" target="nDisp"/>
        <edge kind="dependency" source="nDisp" target="Br_Disp" targetport="nDisp"/>
        <edge kind="dependency" source="nIter" target="Br_Ix" targetport="nIter"/>
        <edge kind="dependency" source="size" target="Br_rgb" targetport="size"/>
    </graph>
</graphml>
